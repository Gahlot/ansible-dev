---
- set_fact: home_dir={{ ansible_env.HOME }}
- set_fact:
    path_1: "{{ ansible_dev_workspaces.workspace1.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"
    path_2: "{{ ansible_dev_workspaces.workspace2.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"
    path_3: "{{ ansible_dev_workspaces.workspace3.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"

- set_fact:
    abs_path_1: "{{ home_dir + '/' + path_1 }}"
    abs_path_2: "{{ home_dir + '/' + path_2 }}"
    abs_path_3: "{{ home_dir + '/' + path_3 }}"

- name: Update current workspace3(dev) to workon
  command: ansible-dev workon "{{ abs_path_3 }}"
  register: result

- name: check current workspace is set to dev workspace
  command: ansible-dev ls
  register: result

- assert:
    that:
      - "'Current working path: {{ abs_path_3 }}' in result.stdout"

- name: cleanup role directory if already exists
  file:
    path: '{{ abs_path_3 }}/roles/{{ ansible_dev_workspaces.workspace3.user_roles[0] }}'
    state: absent

- name: Create my role
  command: ansible-dev create role "{{ ansible_dev_workspaces.workspace3.user_roles[0] }}" 
  register: result

- assert:
    that:
      - "'Failed' not in result.stdout" 
      - "'ERROR' not in result.stdout"

- name: check workspace has new role installed
  command: ansible-dev ls -l "{{ abs_path_3 }}"
  register: result

- assert:
    that:
      - "'{{ ansible_dev_workspaces.workspace3.user_roles[0] }}' in result.stdout"
