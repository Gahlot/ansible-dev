---
- set_fact: home_dir={{ ansible_env.HOME }}
- set_fact:
    path_1: "{{ ansible_dev_workspaces.workspace1.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"
    path_2: "{{ ansible_dev_workspaces.workspace2.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"
    path_3: "{{ ansible_dev_workspaces.workspace3.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"

- set_fact:
    abs_path_1: "{{ home_dir + '/' + path_1 }}"
    abs_path_2: "{{ home_dir + '/' + path_2 }}"
    abs_path_3: "{{ home_dir + '/' + path_3 }}"

- name: Init first workspace with all defaults
  command: 'ansible-dev init {{ ansible_dev_workspaces.workspace1.path }}' 
  register: result

- assert:
    that:
      - "'Failed' not in result.stdout" 
      - "'ERROR' not in result.stdout" 
      - "'Init Success' in result.stdout"

- name: check current workspace is set to latest created workspace
  command: 'ansible-dev ls'
  register: result

- assert:
    that:
      - "'Current working path: {{ abs_path_1 }}' in result.stdout"

- name: Init second workspace with specified ansible verions
  command: >
    ansible-dev init {{ ansible_dev_workspaces.workspace2.path }}
    -ver {{ ansible_dev_workspaces.workspace2.ansible_version }}
    -vname {{ ansible_dev_workspaces.workspace2.venv_name }}
  register: result

- assert:
    that:
      - "'Failed' not in result.stdout" 
      - "'ERROR' not in result.stdout" 
      - "'Init Success' in result.stdout"

- name: check current workspace is set to latest created workspace
  command: 'ansible-dev ls'
  register: result

- assert:
    that:
      - "'Current working path: {{ abs_path_2 }}' in result.stdout"

- name: Init third workspace with specified python verions
  command: >
    ansible-dev init {{ ansible_dev_workspaces.workspace3.path }}
    -ver {{ ansible_dev_workspaces.workspace3.ansible_version }}
    -py {{ ansible_dev_workspaces.workspace3.python_ver }}
  register: result

- assert:
    that:
      - "'Failed' not in result.stdout" 
      - "'ERROR' not in result.stdout" 
      - "'Init Success' in result.stdout"

- name: check current workspace is set to latest created workspace
  command: 'ansible-dev ls'
  register: result

- assert:
    that:
      - "'Current working path: {{ abs_path_3 }}' in result.stdout"
