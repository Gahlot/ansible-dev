---
- set_fact: home_dir={{ ansible_env.HOME }}
- set_fact:
    path_1: "{{ ansible_dev_workspaces.workspace1.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"
    path_2: "{{ ansible_dev_workspaces.workspace2.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"
    path_3: "{{ ansible_dev_workspaces.workspace3.path | regex_replace('^\\~\\/(.*)$', '\\1') }}"

- set_fact:
    abs_path_1: "{{ home_dir + '/' + path_1 }}"
    abs_path_2: "{{ home_dir + '/' + path_2 }}"
    abs_path_3: "{{ home_dir + '/' + path_3 }}"

- name: Update current workspace2 to workon
  command: 'ansible-dev workon abs_path_2' 
  register: result

- name: check current workspace is set to latest created workspace
  command: 'ansible-dev ls'
  register: result

- assert:
    that:
      - "'Current working path: {{ abs_path_2 }}' in result.stdout"

- set_fact:
    role_1: "{{ ansible_dev_workspaces.workspace2.addon_roles | regex_replace('.*\\, (.*)$', '\\1') }}"
    role_2: "{{ ansible_dev_workspaces.workspace2.addon_roles | regex_replace('(.*)\\,.*$', '\\1') }}"

- name: Update workspace2 with new roles
  command: ansible-dev update -r "{{ ansible_dev_workspaces.workspace2.addon_roles }}" 
  register: result

- assert:
    that:
      - "'Failed' not in result.stdout" 
      - "'ERROR' not in result.stdout"

- name: check workspace has new roles installed
  command: ansible-dev ls -l "{{ abs_path_2 }}"
  register: result

- assert:
    that:
      - "'{{ role_1 }}' in result.stdout"
      - "'{{ role_2 }}' in result.stdout"
